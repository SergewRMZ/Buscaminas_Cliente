/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package modules.views;

import com.google.gson.JsonArray;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;
import java.awt.Color;
import java.awt.Image;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.UIManager;
import modules.game.Client;

/**
 *
 * @author serge
 */
public class Index extends javax.swing.JFrame {
    private static Index instance;
    /**
     * Creates new form Menu
     */
    private Index() {
        initComponents();
        setLocationRelativeTo(null);
        setImageLabel(FondoLabel, "/resources/bg.jpg");
    }
    
    public static Index getInstanceIndex () {
        if (instance == null) {
            instance = new Index();
        }
        
        return instance;
    }
    
    private void setImageLabel(JLabel label, String root) {
        ImageIcon imageIcon = new ImageIcon(getClass().getResource(root));

        if (imageIcon.getIconWidth() == -1) {
            System.err.println("Error: la imagen no se pudo cargar desde la ruta: " + root);
        } else {

            // Escalar la imagen al tama침o del JLabel
            Image image = imageIcon.getImage();
            Image scaledImage = image.getScaledInstance(label.getWidth(), label.getHeight(), Image.SCALE_SMOOTH);

            Icon icon = new ImageIcon(scaledImage);
            label.setIcon(icon);
            label.repaint(); // Repinta el JLabel para mostrar la nueva imagen
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BtnStartGame = new javax.swing.JButton();
        comboBoxDifficulty = new javax.swing.JComboBox<>();
        TittleLabel = new javax.swing.JLabel();
        FondoLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(500, 500));
        setName("Index"); // NOI18N
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        BtnStartGame.setBackground(new java.awt.Color(51, 153, 255));
        BtnStartGame.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        BtnStartGame.setForeground(new java.awt.Color(255, 255, 255));
        BtnStartGame.setText("Jugar");
        BtnStartGame.setBorder(null);
        BtnStartGame.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BtnStartGame.setEnabled(false);
        BtnStartGame.setFocusable(false);
        BtnStartGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnStartGameActionPerformed(evt);
            }
        });
        getContentPane().add(BtnStartGame, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 410, 150, 40));

        comboBoxDifficulty.setBackground(new java.awt.Color(255, 255, 255));
        comboBoxDifficulty.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        comboBoxDifficulty.setForeground(new java.awt.Color(0, 0, 0));
        comboBoxDifficulty.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Mode", "Easy", "Normal", "Hard" }));
        comboBoxDifficulty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxDifficultyActionPerformed(evt);
            }
        });
        getContentPane().add(comboBoxDifficulty, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 210, 140, 30));

        TittleLabel.setFont(new java.awt.Font("Gill Sans Ultra Bold Condensed", 0, 48)); // NOI18N
        TittleLabel.setForeground(new java.awt.Color(255, 255, 255));
        TittleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TittleLabel.setText("Buscaminas");
        TittleLabel.setToolTipText("");
        TittleLabel.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        TittleLabel.setMaximumSize(new java.awt.Dimension(120, 30));
        TittleLabel.setMinimumSize(new java.awt.Dimension(120, 30));
        TittleLabel.setPreferredSize(new java.awt.Dimension(120, 30));
        getContentPane().add(TittleLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 60, 290, 70));
        getContentPane().add(FondoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 500, 500));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboBoxDifficultyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxDifficultyActionPerformed
        // TODO add your handling code here:
        
        String selectedDifficulty = (String) comboBoxDifficulty.getSelectedItem();
        if (selectedDifficulty != null && !selectedDifficulty.isEmpty() && !selectedDifficulty.contains("Selected Mode"))
            BtnStartGame.setEnabled(true); // Habilitar el bot칩n
        else 
            BtnStartGame.setEnabled(false); // Deshabilitar el bot칩n si no hay selecci칩n
        
    }//GEN-LAST:event_comboBoxDifficultyActionPerformed

    private void BtnStartGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnStartGameActionPerformed
        // TODO add your handling code here:
        String selectedDifficulty = (String) comboBoxDifficulty.getSelectedItem();
        
        Client socketClient = new Client();
        socketClient.connect();
        String jsonResponse = socketClient.sendMessageInitGame(selectedDifficulty);
        System.out.println("Response del servidor: " + jsonResponse);
        if (jsonResponse != null) {
            JsonObject jsonObject = JsonParser.parseString(jsonResponse).getAsJsonObject();
            JsonArray jsonBoard = jsonObject.getAsJsonArray("board");
            System.out.println(jsonBoard);
            
            String [][] board = new String[jsonBoard.size()][]; // Crear el tablero
            
            for (int i = 0; i < jsonBoard.size(); i++) {
                JsonArray row = jsonBoard.get(i).getAsJsonArray(); // Obtener la fila como un array
                board[i] = new String[row.size()];
                for (int j = 0; j < row.size(); j++) {
                    board[i][j] = row.get(j).getAsString(); // Obtener los enteros.
                }
            }
            
            System.out.println("Tablero obtenido: ");
            for (int i = 0; i < 9; i++) {
                for (int j = 0; j < 9; j++) {
                    System.out.print(board[i][j]);
                }
                
                System.out.println();
            }
            
            Game.getInstanceGame(board);
            this.setVisible(false);
        }        
    }//GEN-LAST:event_BtnStartGameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Index.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Index.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Index.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Index.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Index().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnStartGame;
    private javax.swing.JLabel FondoLabel;
    private javax.swing.JLabel TittleLabel;
    private javax.swing.JComboBox<String> comboBoxDifficulty;
    // End of variables declaration//GEN-END:variables
}
